For this project, I downloaded Spotify data from Kaggle and created a table before exploring different analytics.  

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

I then inserted the Spotify Data .csv into the table and explored the data. 

#1. Create a list of songs where the tempo is greater than or equal to 50 and the danceability is greater than or equal to 0.6
SELECT artist_name, track_name, tempo, danceability
FROM BIT_DB.Spotifydata
WHERE tempo >= 50
AND danceability >= 0.6
GROUP BY artist_name;

#2. Who are the five most popular artists?
SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY (popularity)desc
LIMIT 5;

#3. What are the 10 longest songs in the table? Convert the duration from milliseconds to seconds. 
SELECT artist_name, track_name, (duration_ms/1000) duration
FROM BIT_DB.Spotifydata 
ORDER BY duration desc
LIMIT 10;

#4. Create a case that recategorizes songs as "snoozers" and "bangers" based on danceability. 
SELECT artist_name, track_name, danceability,
       CASE 
           WHEN danceability < 0.55 THEN 'snoozer'
           WHEN danceability >= 0.55 THEN 'banger'
       END as danceability_type
FROM BIT_DB.Spotifydata;
