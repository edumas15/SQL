#1. Every Sales Support Agent in order of birthdate 
SELECT * FROM chinook.employees
WHERE Title = 'Sales Support Agent'
ORDER BY BirthDate desc;

#2. Invoice data on customers from Brazil 
SELECT CustomerId, FirstName, LastName, Country, InvoiceDate, Total 
FROM chinook.customers
LEFT OUTER JOIN invoices 
ON customers.CustomerId = invoices.CustomerId
WHERE Country = 'Brazil';

#3. Every track including Malcolm Young in ascending order
SELECT Name, Composer, (Milliseconds/1000) Duration_in_seconds
FROM chinook.tracks
WHERE Composer LIKE '%Malcolm Young%'
ORDER BY Duration_in_seconds asc;

#4. 5 longest Jazz songs LEFTJOIN to distinguish genre 
SELECT tracks.Name, (Milliseconds/1000) as Duration, genres.Name as Genre
FROM chinook.tracks 
LEFT OUTER JOIN genres
ON tracks.GenreID = genres.GenreId
WHERE Genre = 'Jazz'
ORDER BY Duration desc 
LIMIT 5;

#5. Every unique country in the invoices table
SELECT BillingCountry 
FROM chinook.invoices
GROUP BY BillingCountry
HAVING COUNT(DISTINCT CustomerId) = 1;

#6. Sum of 2009 invoices originating from USA 
SELECT BillingCountry, ROUND(SUM(total), 2) 
FROM chinook.invoices
WHERE BillingCountry = 'USA' 
AND InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'

#7. Reclassifying songs based on duration using the CASE clause
SELECT Name, milliseconds/1000,
    CASE 
        WHEN milliseconds/1000 > 270 THEN 'long song'
        WHEN milliseconds/1000 < 180 THEN 'short song'
        ELSE 'average length'
    END AS 'Song Distinctions'
FROM chinook.tracks;

#8. A distinct list of customers from california who aren't located in Cupertino
SELECT DISTINCT FirstName, LastName, BillingState, BillingCity
FROM chinook.customers 
LEFT OUTER JOIN chinook.invoices
ON customers.CustomerId = invoices.CustomerId
WHERE BillingState = 'CA'
AND BillingCity <> 'Cupertino'
